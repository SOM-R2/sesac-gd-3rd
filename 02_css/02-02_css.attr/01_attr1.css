.px {
    width: 100px;
    height: 100px;
    background-color: pink;
}

/* em : 부모 요소의 font-size가 기준 -> 사용 시 주의 필요 */
.em-text {
    /* 부모 요소의 font-size를 받아오기 때문에 점점 커짐 */
    font-size: 2em;
}

/* rem : root(html)의 font-size가 기준 -> 중첩 되어도 영향 X */
/* html의 font-size를 지정하지 않으면 기본적으로 1rem = 16px */
.rem-text {
    font-size: 2rem;
}

/* em, rem 폰트 크기 속성에만 사용하는 것 아님 */
.em {
    width: 10em;
    height: 10em;
    background-color: aliceblue;
}

.em-parents {
    font-size: 10px;
    background-color: violet;
}

.rem {
    width: 10rem;
    height: 10rem;
    background-color: rgb(24, 86, 167);
}

.rem-parents {
    font-size: 30px;
    background-color: lightgoldenrodyellow;
}

.percent {
    /* 자동으로 너비 변경됨 */
    width: 50%;
    background-color: palevioletred;
}

.percent-parents {
    width: 300px;
    /*
    부모인 body의 70%를 차지 
     width: 70%;
     -> 이 방식을 사용하면 반응형에 특화(개발자도구 줄이면 너비도 비율에 맞게 줄어듦) 
    */
    background-color: rgb(56, 187, 13);
}

.vh {
    width: 30vh; /*vh는 단위라서 너비에도 사용가능! px로 변환해줌 */
    height: 30vh;
    background-color: chocolate;
}

.vw {
    width: 30vw; /*vh는 단위라서 너비에도 사용가능! px로 변환해줌 */
    height: 30vw;
    /* height: 130vw; 100 넘겨도 됨*/
    background-color: rgb(30, 36, 210);
}

.d-block {
    /*     
    display : block; -> div 요소의 default 속성값
      -> block 요소를 inline요소로 바꾸는 법 
         display: inline;
    */
    background-color: antiquewhite;
    border: 1px solid yellow;
    width: 100px;
    height: 100px;
    /* margin : 태두리 바깥 여백 */
    /* 요소 간의 거리를 둘 수 있음 */
    /* 만약 margin이 겹치는 경우 더 큰 크기의 margin만큼 여백이 생김 */
    margin: 10px 20px 30px 40px;
    margin: 10px 20px;

    /* padding 속성은 크기의 영향을 줌! */
    /* padding의 단축속성 */
    padding: 30px 30px;
    /* margin과 padding 모두 각 방향에 따로 크기를 부여할 수 있음 */
    padding-top: 50px;
}

.d-inline {
    /* 
    display : inline; -> span 요소의 default 속성값
      -> inline 요소를 block요소로 바꾸는 법 
         display: block;
    */
    background-color: lightgray;
    border: 1px solid darkblue;
    /* 
    요소는 컨텐트의 크기에 딱 맞춰서 너비와 높이가 
    지정되므로 width, height 속성 지정 불가 
    width: 100px; 
    height: 100px;
    */

    /* inline의 margin은 좌우만 가능, 그렇지만 css가 깨지기 때문에 잘 사용하지 않음*/
    /* margin과 padding은 실제 레이아웃에 영향을 미치지 않아 레이아웃이 깨질 수 있음 */

    margin: 50px;
    padding: 30px;
}

.d-inline-block {
    width: 200px;
    height: 200px;

    /* block 요소처럼 width와 height를 지정할 수 있음 */
    /* inline 요소처럼 content 크기에 딱 맞도록 기본 크기 자동 지정 */
    /* inline 요소처럼 수평 정렬 */
    display: inline-block;
    border: 1px solid salmon;
    font-size: 30px;
}

.container {
    background-color: orange;
    width: auto;
    height: 200px;
}

/* 강사님 답 */
.container * {
    display: inline-block;
    height: 100px;
    width: 200px;
    margin-right: 30px;
}

.html {
    background-color: skyblue;
}

.css {
    background-color: green;
}

.javascript {
    background-color: red;
}

/* 
내 답 
.html {
    display: inline-block;
    height: 100px;
    width: 200px;
    background-color: aqua;
}

.css {
    display: inline-block;
    height: 100px;
    width: 200px;
    background-color: green;
}

.javascript {
    height: 100px;
    width: 200px;
    background-color: red;
    display: inline-block;
} 

*/

/* max-width, min-width */
.parent {
    width: 500px;
    height: 200px;
    background-color: pink;
}

.min {
    /* 부모에 맞춰서 최소 지정 너비 만큼은 줄어들지 않음 -> 반응형에서 버튼 너무 작아지지 않게 설정할 때 사용*/
    /* 최소 넓이이므로 400px보다 늘어날 수 있지만 줄어 들 수 없음 */
    min-width: 400px;
    height: 100px;
    background-color: purple;
}

.max {
    /* 최대 넓이 이므로 400px 보다 줄어들 수 있지만 늘어날 수 없음 -> 반응형에서 이미지 같은거 더 커지면 깨질 때 사용 */
    max-width: 400px;
    height: 100px;
    background-color: yellowgreen;
}

/* height 도 마찬가지 */
/* 
   하지만 max-width와 min-width, max-height와 min-height는 
   주로 반응형을 위한 웹 페이지에서 사용되기 때문에 일반적으로는 
   width 기반으로 많이 쓰임 
*/

.header {
    height: 130px;
    background-color: aqua;
}
.calc {
    width: calc(100vw - 300px);
    /* 화면에 바로 보여질 크기를 조정하고 싶을 때  */
    height: calc(100vh - 130px);
    background-color: gold;
}

/* border & border-radius */
.border {
    /* border -> 단축속성 */
    border: 3px solid black;
    /* 굵기(border-width), 스타일(border-style), 색상(border-color) */
    border-width: 1px;
    border-style: dotted;
    /* 색 적용 시계방향으로 됨 */
    border-color: red orange yellow green;
    border-right: 5px solid purple;
    border-bottom: 5px solid gray;
}

.rounded {
    /* border: none; -> 버튼 테두리 없애고 싶을 때 */
    width: 150px;
    height: 80px;
    /* 높이의 반 이상의 radius 를 주면 동글게 가능 */
    border-radius: 40px;

    /* 시계방향으로 둥글기 지정 가능 */
    border-radius: 5px 10px;
    border-radius: 20px 0 5px;
    border-radius: 5px 10px 15px 20px;
}

/* box-sizing 속성 */
/* 요소의 크기 계산 기준을 지정하는 속성 */
.box-sizing {
    width: 100px;
    height: 100px;
    padding: 20px;
    border: 15px solid red;
    background-color: orange;
}

.content-box {
    box-sizing: content-box;
}

.border-box {
    box-sizing: border-box;
}

/* border 관련 실습 과제 */
.border-prac1 {
    border: 1px solid black;
    border-width: 5px 10px 15px 20px;
}

.border-prac2 {
    border: 1px solid blue;
    border-style: dashed solid dotted double;
}
